# {{ ansible_managed }}
---
version: "3"

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  frontend:
    driver: bridge
    name: monitoring
  backend:
    driver: bridge

services:
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: '472'
    container_name: monitoring_grafana
#    ports:
#      - '{{ resource_monitoring_grafana_port }}:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana.env
    networks:
      - frontend
      - backend
    depends_on:
      - prometheus
    labels:
      - "traefik.enable={{ reverse_proxy_enable|lower }}"
      - "traefik.port=3000"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{ server_domain }}`)"

  prometheus:
    image: prom/prometheus
    container_name: monitoring_prometheus
    restart: unless-stopped
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - backend
    depends_on:
      - node-exporter
      - cadvisor
      - speedtest
      - ping

  node-exporter:
    image: prom/node-exporter
    container_name: monitoring_node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    expose:
      - 9100
    networks:
      - backend

  cadvisor:
    image: zcube/cadvisor
    container_name: monitoring_cadvisor
    privileged: true
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    expose:
      - 8080
    networks:
      - backend

  ping:
    tty: true
    stdin_open: true
    image: prom/blackbox-exporter
    restart: unless-stopped
    volumes:
      - ./blackbox/config:/config
    command:
      - '--config.file=/config/blackbox.yml'
    expose:
      - 9115
    networks:
      - backend

  speedtest:
    image: miguelndecarvalho/speedtest-exporter
    restart: unless-stopped
    expose:
      - 9798
    networks:
      - backend
