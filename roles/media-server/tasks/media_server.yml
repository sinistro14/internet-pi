- name: Create media-server folder
  ansible.builtin.file:
    path: "{{ config_dir }}/media-server"
    state: directory
    mode: 0755
  become: false

- name: Create media folder symbolic link
  ansible.builtin.file:
    src: "/mnt/data"
    dest: "/home/{{ ansible_user }}/media-server/media"
    state: link
    mode: 0755
  become: false

- name: Create media-server folders
  ansible.builtin.file:
    path: "{{ config_dir }}/media-server/{{ item }}"
    state: directory
    mode: 0755
  loop:
    - media/data/movies/
    - media/data/tv/
    - media/torrents/complete
    - media/torrents/incomplete
    - plex/config/
    - deluge/config/
    - radarr/config/
    - sonarr/config/
    - prowlarr/config/
  become: false

- name: Copy templated media server files into place
  ansible.builtin.template:
    src: templates/{{ item.src }}
    dest: "{{ config_dir }}/media-server/{{ item.dest }}"
    mode: 0644
  with_items:
      - {src: 'media-server-docker-compose.yml.j2', dest: 'docker-compose.yml'}
  notify: Restart media-server
  become: false

- name: Ensure media server is running
  community.docker.docker_compose:
    project_src: "{{ config_dir }}/media-server/"
    pull: true
    build: false
  become: false

- name: Configure Deluge
  replace:
    path: "{{ config_dir }}/media-server/deluge/config/core.conf"
    regexp: '([[:blank:]]*)"{{ item.config }}": [\/[:alnum:]"]*,$'
    replace: '\1"{{ item.config }}": {{ item.value }},'
    backup: yes
  with_items:
    - {config: 'move_completed', value: 'true'}
    - {config: 'download_location', value: '"/data/torrents/incomplete"'}
    - {config: 'move_completed_path', value: '"/data/torrents/complete"'}
  become: false
